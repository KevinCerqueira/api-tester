[{"C:\\Users\\paulolima\\documents\\github\\api-tester\\web\\src\\index.tsx":"1","C:\\Users\\paulolima\\documents\\github\\api-tester\\web\\src\\Home.tsx":"2","C:\\Users\\paulolima\\documents\\github\\api-tester\\web\\src\\components\\MyModal.tsx":"3"},{"size":274,"mtime":1609937862560,"results":"4","hashOfConfig":"5"},{"size":3626,"mtime":1610972032851,"results":"6","hashOfConfig":"5"},{"size":1531,"mtime":1610971928459,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1kltzo7",{"filePath":"11","messages":"12","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\paulolima\\documents\\github\\api-tester\\web\\src\\index.tsx",[],["15","16","17","18","19"],"C:\\Users\\paulolima\\documents\\github\\api-tester\\web\\src\\Home.tsx",["20","21","22","23","24","25","26","27","28","29"],"C:\\Users\\paulolima\\documents\\github\\api-tester\\web\\src\\components\\MyModal.tsx",["30","31"],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":2,"column":17,"nodeType":"44","messageId":"45","endLine":2,"endColumn":26},{"ruleId":"42","severity":1,"message":"46","line":4,"column":3,"nodeType":"44","messageId":"45","endLine":4,"endColumn":8},{"ruleId":"42","severity":1,"message":"47","line":6,"column":3,"nodeType":"44","messageId":"45","endLine":6,"endColumn":12},{"ruleId":"42","severity":1,"message":"48","line":8,"column":3,"nodeType":"44","messageId":"45","endLine":8,"endColumn":7},{"ruleId":"42","severity":1,"message":"49","line":22,"column":11,"nodeType":"44","messageId":"45","endLine":22,"endColumn":21},{"ruleId":"42","severity":1,"message":"50","line":37,"column":9,"nodeType":"44","messageId":"45","endLine":37,"endColumn":16},{"ruleId":"42","severity":1,"message":"51","line":38,"column":10,"nodeType":"44","messageId":"45","endLine":38,"endColumn":18},{"ruleId":"42","severity":1,"message":"52","line":38,"column":20,"nodeType":"44","messageId":"45","endLine":38,"endColumn":31},{"ruleId":"53","severity":1,"message":"54","line":43,"column":23,"nodeType":"55","messageId":"56","endLine":43,"endColumn":26,"suggestions":"57"},{"ruleId":"58","severity":1,"message":"59","line":55,"column":5,"nodeType":"60","messageId":"61","endLine":55,"endColumn":16},{"ruleId":"62","severity":1,"message":"63","line":6,"column":33,"nodeType":"44","messageId":"64","endLine":6,"endColumn":43},{"ruleId":"53","severity":1,"message":"54","line":6,"column":40,"nodeType":"55","messageId":"56","endLine":6,"endColumn":43,"suggestions":"65"},"lines-around-directive",["66"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Input' is defined but never used.","'FormGroup' is defined but never used.","'Grid' is defined but never used.","'dataSubmit' is defined but never used.","'classes' is assigned a value but never used.","'response' is assigned a value but never used.","'setResponse' is assigned a value but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["67","68"],"no-console","Unexpected console statement.","MemberExpression","unexpected","@typescript-eslint/explicit-module-boundary-types","Argument 'props' should be typed with a non-any type.","anyTypedArg",["69","70"],"padding-line-between-statements",{"messageId":"71","fix":"72","desc":"73"},{"messageId":"74","fix":"75","desc":"76"},{"messageId":"71","fix":"77","desc":"73"},{"messageId":"74","fix":"78","desc":"76"},"suggestUnknown",{"range":"79","text":"80"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"79","text":"81"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"82","text":"80"},{"range":"82","text":"81"},[992,995],"unknown","never",[252,255]]