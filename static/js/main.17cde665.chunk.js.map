{"version":3,"sources":["components/MySnackBar.tsx","Home.tsx","index.tsx"],"names":["ConsecutiveSnackbars","props","React","useState","snackPack","setSnackPack","open","setOpen","undefined","messageInfo","setMessageInfo","useEffect","length","prev","slice","handleClose","event","reason","title","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","onExited","message","action","Button","color","size","onClick","App","styleSuccess","borderColor","styleError","data","status","statusText","style","dataResponse","setDataResponse","statusTransaction","setStatusTransaction","url","type","state","setState","handleChange","name","target","value","handleSumbit","a","preventDefault","alert","axios","get","then","response","errorRequest","String","substring","typeError","codeError","Number","className","id","rel","href","onSubmit","noValidate","autoComplete","FormControl","variant","InputLabel","htmlFor","Select","native","onChange","label","inputProps","disabled","TextField","CircularProgress","Chip","multiline","rows","defaultValue","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17cde665.chunk.js","sourcesContent":["/* eslint-disable prettier/prettier */\nimport React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nexport interface SnackbarMessage {\n  message: string;\n  key: number;\n}\n\nexport interface State {\n  open: boolean;\n  snackPack: SnackbarMessage[];\n  messageInfo?: SnackbarMessage;\n}\n\nexport interface ValuesProps {\n  title: string;\n}\n\nexport default function ConsecutiveSnackbars(props: ValuesProps): JSX.Element {\n  const [snackPack, setSnackPack] = React.useState<SnackbarMessage[]>([]);\n  const [open, setOpen] = React.useState(true);\n  const [messageInfo, setMessageInfo] = React.useState<\n    SnackbarMessage | undefined\n  >(undefined);\n\n  React.useEffect(() => {\n    if (snackPack.length && !messageInfo) {\n      // Set a new snack when we don't have an active one\n      setMessageInfo({ ...snackPack[0] });\n      setSnackPack((prev) => prev.slice(1));\n      setOpen(true);\n    } else if (snackPack.length && messageInfo && open) {\n      // Close an active snack when a new one is added\n      setOpen(false);\n    }\n  }, [snackPack, messageInfo, open]);\n\n  const handleClick = (message: string) => () => {\n    setSnackPack((prev) => [...prev, { message, key: new Date().getTime() }]);\n  };\n\n  const handleClose: any = (\n    event: React.SyntheticEvent | React.MouseEvent,\n    reason?: string,\n  ) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const handleExited = (): void => {\n    setMessageInfo(undefined);\n  };\n  const { title } = props;\n  return (\n    <div>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        onExited={handleExited}\n        message={title}\n        action={\n          // eslint-disable-next-line react/jsx-wrap-multilines\n          <>\n            <Button color=\"primary\" size=\"small\" onClick={handleClose}>\n              OK\n            </Button>\n          </>\n        }\n      />\n    </div>\n  );\n}\n","/* eslint-disable prettier/prettier */\nimport React, { useState, FormEvent, ChangeEvent } from 'react';\nimport {\n  FormControl,\n  Button,\n  InputLabel,\n  Select,\n  TextField,\n  CircularProgress,\n  Chip,\n} from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport axios from 'axios';\nimport MySnackBar from './components/MySnackBar';\nimport './Home.css';\n\ninterface InputSubmit {\n  url: string;\n  type: string;\n}\n\ninterface Response {\n  data: Array<string>;\n  status: number;\n  statusText: string;\n  style: {\n    color: string;\n    borderColor: string;\n  };\n}\n// interface dataSubmit {\n//   name: string;\n//   value: string | number;\n// }\n\nfunction App(): JSX.Element {\n  const styleDefault = {\n    color: '#FFF',\n    borderColor: '#FFF',\n  };\n  const styleSuccess = {\n    color: '#33ff00',\n    borderColor: '#33ff00',\n  };\n  const styleError = {\n    color: '#E83B42',\n    borderColor: '#E83B42',\n  };\n  const [dataResponse, setDataResponse] = useState<Response>({\n    data: [],\n    status: 0,\n    statusText: '',\n    style: styleDefault,\n  });\n  const [statusTransaction, setStatusTransaction] = useState(false);\n  const [state, setState] = useState<InputSubmit>({\n    url: '',\n    type: '',\n  });\n\n  const handleChange: any = (\n    event: ChangeEvent<{ name?: string; value: unknown }>,\n  ) => {\n    const name = event.target.name as keyof typeof state;\n    setState({\n      ...state,\n      [name]: event.target.value,\n    });\n  };\n  async function handleSumbit(event: FormEvent): Promise<void> {\n    event.preventDefault();\n    setStatusTransaction(true);\n    const { url, type } = state;\n    if (type === '') {\n      // eslint-disable-next-line no-alert\n      alert('Selecione um tipo de envio!');\n    }\n    if (url === '') {\n      // eslint-disable-next-line no-alert\n      alert('Insira uma API!');\n    }\n    if (type === 'GET') {\n      try {\n        await axios.get(url).then((response: any) => {\n          // setDataResponse(response);\n          setDataResponse({\n            ...response,\n            style: styleSuccess,\n          });\n        });\n      } catch (error) {\n        const errorRequest = String(error).substring(7);\n        if (errorRequest !== 'Network Error') {\n          const typeError = errorRequest.substring(0, errorRequest.length - 21);\n          const codeError = errorRequest.substring(errorRequest.length - 3);\n          setDataResponse({\n            data: [],\n            status: Number(codeError),\n            statusText: typeError,\n            style: styleError,\n          });\n        } else {\n          setDataResponse({\n            data: [],\n            status: 400,\n            statusText: errorRequest,\n            style: styleError,\n          });\n        }\n      }\n    }\n    setStatusTransaction(false);\n  }\n  return (\n    <div className=\"app\">\n      <MySnackBar title=\"Este site ainda estÃ¡ em desenvolvimento, ok?!\" />\n      <div id=\"title\" className=\"text-center\">\n        <p id=\"title-top\" className=\"h1\">\n          API TESTER\n        </p>\n        <p id=\"title-bottom\">\n          made by{' '}\n          <a\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n            href=\"https://github.com/KevinCerqueira\"\n          >\n            Kevin\n          </a>\n        </p>\n      </div>\n      <div className=\"sections flex-container\">\n        <div id=\"section-input\" className=\"flex-item\">\n          <form onSubmit={handleSumbit} noValidate autoComplete=\"off\">\n            <div className=\"flex-container\">\n              <div className=\"flex-item flex-grow-0\">\n                <FormControl id=\"form-control\" variant=\"outlined\">\n                  <InputLabel htmlFor=\"select-type\">Type</InputLabel>\n                  <Select\n                    native\n                    id=\"select-type\"\n                    value={state.type}\n                    onChange={handleChange}\n                    label=\"Type\"\n                    inputProps={{\n                      name: 'type',\n                      id: 'select-type',\n                    }}\n                    disabled={statusTransaction}\n                  >\n                    <option value=\"\"> </option>\n                    <option value=\"GET\">GET</option>\n                    <option disabled value=\"POST\" className=\"text-secondary\">\n                      POST\n                    </option>\n                  </Select>\n                </FormControl>\n              </div>\n              <div className=\"flex-item flex-grow-2\">\n                <TextField\n                  id=\"input-url\"\n                  className=\"w-100\"\n                  label=\"API\"\n                  variant=\"outlined\"\n                  inputProps={{\n                    name: 'url',\n                    id: 'input-url',\n                  }}\n                  disabled={statusTransaction}\n                  onChange={handleChange}\n                />\n              </div>\n              <div className=\"flex-item flex-grow-0\">\n                <Button\n                  id=\"btn-send\"\n                  className=\"w-100 h-100\"\n                  variant=\"contained\"\n                  color=\"default\"\n                  type=\"submit\"\n                  onClick={handleSumbit}\n                  disabled={statusTransaction}\n                >\n                  {statusTransaction ? (\n                    <CircularProgress className=\"circular-progress\" />\n                  ) : (\n                    <SendIcon />\n                  )}\n                </Button>\n              </div>\n            </div>\n          </form>\n        </div>\n        <div id=\"section-response\" className=\"flex-item\">\n          <div id=\"section-response-container\" className=\"flex-container\">\n            <div id=\"section-status\" className=\"flex-item\">\n              <div id=\"container-chips\" className=\"flex-container\">\n                <div className=\"flex-item text-center\">\n                  <Chip\n                    style={dataResponse.style}\n                    className=\"chip-status\"\n                    label={`Status: ${\n                      dataResponse.statusText === ''\n                        ? 'NO DATA'\n                        : dataResponse.status\n                    }`}\n                    variant=\"outlined\"\n                  />\n                </div>\n                <div className=\"flex-item text-center\">\n                  <Chip\n                    style={dataResponse.style}\n                    className=\"chip-status\"\n                    label={`Status Text: ${\n                      dataResponse.statusText === ''\n                        ? 'NO DATA'\n                        : dataResponse.statusText\n                    }`}\n                    variant=\"outlined\"\n                  />\n                </div>\n              </div>\n            </div>\n            <div id=\"section-return\" className=\"flex-item\">\n              <TextField\n                className=\"btn-block\"\n                id=\"return-text-area\"\n                label=\"Return\"\n                multiline\n                rows={4}\n                disabled\n                // value={dataResponse.data}\n                defaultValue=\"still not working, wait...\"\n                variant=\"outlined\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/* eslint-disable prettier/prettier */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Home from './Home';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Home />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}