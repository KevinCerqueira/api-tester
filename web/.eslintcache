[{"C:\\Users\\55759\\documents\\github\\api-tester\\web\\src\\index.tsx":"1","C:\\Users\\55759\\documents\\github\\api-tester\\web\\src\\Home.tsx":"2","C:\\Users\\55759\\documents\\github\\api-tester\\web\\src\\components\\MyModal.tsx":"3"},{"size":262,"mtime":1610972885061,"results":"4","hashOfConfig":"5"},{"size":3493,"mtime":1610972885014,"results":"6","hashOfConfig":"5"},{"size":1480,"mtime":1610972885014,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"mislvc",{"filePath":"11","messages":"12","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"C:\\Users\\55759\\documents\\github\\api-tester\\web\\src\\index.tsx",[],["17","18","19","20","21"],"C:\\Users\\55759\\documents\\github\\api-tester\\web\\src\\Home.tsx",["22","23","24","25","26","27","28","29","30","31"],"/* eslint-disable prettier/prettier */\nimport React, { useEffect, useState, FormEvent, ChangeEvent } from 'react';\nimport {\n  Input,\n  FormControl,\n  FormGroup,\n  Button,\n  Grid,\n  InputLabel,\n  Select,\n  TextField,\n} from '@material-ui/core';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport SendIcon from '@material-ui/icons/Send';\nimport MyModal from './components/MyModal';\nimport './Home.css';\n\ninterface inputSubmit {\n  url: string;\n  type: string;\n}\ninterface dataSubmit {\n  name: string;\n  value: string | number;\n}\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n        width: '25ch',\n      },\n    },\n  }),\n);\nfunction App(): JSX.Element {\n  const classes = useStyles();\n  const [response, setResponse] = useState();\n  const [state, setState] = useState<inputSubmit>({\n    url: '',\n    type: 'GET',\n  });\n  const handleChange: any = (\n    event: ChangeEvent<{ name?: string; value: unknown }>,\n  ) => {\n    const name = event.target.name as keyof typeof state;\n    setState({\n      ...state,\n      [name]: event.target.value,\n    });\n  };\n  async function handleSumbit(event: FormEvent): Promise<void> {\n    event.preventDefault();\n\n    console.log(state);\n  }\n  return (\n    <div className=\"app\">\n      <MyModal\n        title=\"ATENÇÃO\"\n        body=\"Este site ainda está em desenvolvimento, ok?!\"\n      />\n      <div id=\"title\" className=\"text-center\">\n        <p id=\"title-top\" className=\"h1\">\n          API TESTER\n        </p>\n        <p id=\"title-bottom\">\n          made by{' '}\n          <a\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n            href=\"https://github.com/KevinCerqueira\"\n          >\n            Kevin\n          </a>\n        </p>\n      </div>\n      <div id=\"section-input\">\n        <form onSubmit={handleSumbit} noValidate autoComplete=\"off\">\n          <div className=\"flex-container\">\n            <div className=\"flex-item flex-grow-0\">\n              <FormControl\n                id=\"form-control\"\n                variant=\"outlined\"\n                className=\"w-100\"\n              >\n                <InputLabel htmlFor=\"select-type\">Type</InputLabel>\n                <Select\n                  id=\"select-type\"\n                  value={state.type}\n                  onChange={handleChange}\n                  label=\"Type\"\n                  inputProps={{\n                    name: 'type',\n                    id: 'select-type',\n                  }}\n                >\n                  <option value=\"GET\">GET</option>\n                  <option value=\"POST\">POST</option>\n                </Select>\n              </FormControl>\n            </div>\n            <div className=\"flex-item flex-grow-2\">\n              <TextField\n                id=\"input-url\"\n                className=\"w-100\"\n                label=\"API\"\n                variant=\"outlined\"\n                inputProps={{\n                  name: 'url',\n                  id: 'input-url',\n                }}\n                onChange={handleChange}\n              />\n            </div>\n            <div className=\"flex-item flex-grow-0\">\n              <Button\n                id=\"btn-send\"\n                className=\"w-100 h-100\"\n                variant=\"contained\"\n                color=\"default\"\n              >\n                <SendIcon />\n              </Button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\55759\\documents\\github\\api-tester\\web\\src\\components\\MyModal.tsx",["32","33"],"/* eslint-disable prettier/prettier */\nimport React, { useState } from 'react';\nimport { Modal, Button } from '@material-ui/core';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\n\nexport default function MyModal(props: any): JSX.Element {\n  const [open, setOpen] = useState(true);\n  const { title, body } = props;\n  const handleClose = (): void => {\n    setOpen(false);\n  };\n  const modalStyle = {\n    top: `${50}%`,\n    left: `${50}%`,\n    backgroundColor: '#212121',\n    color: '#FFF',\n    transform: `translate(-${50}%, -${50}%)`,\n  };\n  const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n      paper: {\n        position: 'absolute',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n      },\n    }),\n  );\n  const classes = useStyles();\n  return (\n    <Modal\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n    >\n      <div style={modalStyle} className={classes.paper}>\n        <h2 className=\"text-center\" id=\"simple-modal-title\">\n          {title}\n        </h2>\n        <p className=\"text-center\" id=\"simple-modal-description\">\n          {body}\n        </p>\n        <Button onClick={handleClose} variant=\"contained\" className=\"btn-block\">\n          OK!\n        </Button>\n      </div>\n    </Modal>\n  );\n}",{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":2,"column":17,"nodeType":"46","messageId":"47","endLine":2,"endColumn":26},{"ruleId":"44","severity":1,"message":"48","line":4,"column":3,"nodeType":"46","messageId":"47","endLine":4,"endColumn":8},{"ruleId":"44","severity":1,"message":"49","line":6,"column":3,"nodeType":"46","messageId":"47","endLine":6,"endColumn":12},{"ruleId":"44","severity":1,"message":"50","line":8,"column":3,"nodeType":"46","messageId":"47","endLine":8,"endColumn":7},{"ruleId":"44","severity":1,"message":"51","line":22,"column":11,"nodeType":"46","messageId":"47","endLine":22,"endColumn":21},{"ruleId":"44","severity":1,"message":"52","line":37,"column":9,"nodeType":"46","messageId":"47","endLine":37,"endColumn":16},{"ruleId":"44","severity":1,"message":"53","line":38,"column":10,"nodeType":"46","messageId":"47","endLine":38,"endColumn":18},{"ruleId":"44","severity":1,"message":"54","line":38,"column":20,"nodeType":"46","messageId":"47","endLine":38,"endColumn":31},{"ruleId":"55","severity":1,"message":"56","line":43,"column":23,"nodeType":"57","messageId":"58","endLine":43,"endColumn":26,"suggestions":"59"},{"ruleId":"60","severity":1,"message":"61","line":55,"column":5,"nodeType":"62","messageId":"63","endLine":55,"endColumn":16},{"ruleId":"64","severity":1,"message":"65","line":6,"column":33,"nodeType":"46","messageId":"66","endLine":6,"endColumn":43},{"ruleId":"55","severity":1,"message":"56","line":6,"column":40,"nodeType":"57","messageId":"58","endLine":6,"endColumn":43,"suggestions":"67"},"lines-around-directive",["68"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Input' is defined but never used.","'FormGroup' is defined but never used.","'Grid' is defined but never used.","'dataSubmit' is defined but never used.","'classes' is assigned a value but never used.","'response' is assigned a value but never used.","'setResponse' is assigned a value but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["69","70"],"no-console","Unexpected console statement.","MemberExpression","unexpected","@typescript-eslint/explicit-module-boundary-types","Argument 'props' should be typed with a non-any type.","anyTypedArg",["71","72"],"padding-line-between-statements",{"messageId":"73","fix":"74","desc":"75"},{"messageId":"76","fix":"77","desc":"78"},{"messageId":"73","fix":"79","desc":"75"},{"messageId":"76","fix":"80","desc":"78"},"suggestUnknown",{"range":"81","text":"82"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"81","text":"83"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"84","text":"82"},{"range":"84","text":"83"},[950,953],"unknown","never",[247,250]]