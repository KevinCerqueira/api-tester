[{"C:\\Users\\paulolima\\documents\\github\\api-tester\\web\\src\\index.tsx":"1","C:\\Users\\paulolima\\documents\\github\\api-tester\\web\\src\\Home.tsx":"2","C:\\Users\\paulolima\\documents\\github\\api-tester\\web\\src\\components\\MyModal.tsx":"3"},{"size":274,"mtime":1609937862560,"results":"4","hashOfConfig":"5"},{"size":3290,"mtime":1610976626653,"results":"6","hashOfConfig":"5"},{"size":1531,"mtime":1610971928459,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kltzo7",{"filePath":"10","messages":"11","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\paulolima\\documents\\github\\api-tester\\web\\src\\index.tsx",[],"C:\\Users\\paulolima\\documents\\github\\api-tester\\web\\src\\Home.tsx",["14","15"],"C:\\Users\\paulolima\\documents\\github\\api-tester\\web\\src\\components\\MyModal.tsx",["16","17"],{"ruleId":"18","severity":1,"message":"19","line":29,"column":23,"nodeType":"20","messageId":"21","endLine":29,"endColumn":26,"suggestions":"22"},{"ruleId":"23","severity":1,"message":"24","line":41,"column":5,"nodeType":"25","messageId":"26","endLine":41,"endColumn":16},{"ruleId":"27","severity":1,"message":"28","line":6,"column":33,"nodeType":"29","messageId":"30","endLine":6,"endColumn":43},{"ruleId":"18","severity":1,"message":"19","line":6,"column":40,"nodeType":"20","messageId":"21","endLine":6,"endColumn":43,"suggestions":"31"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["32","33"],"no-console","Unexpected console statement.","MemberExpression","unexpected","@typescript-eslint/explicit-module-boundary-types","Argument 'props' should be typed with a non-any type.","Identifier","anyTypedArg",["34","35"],{"messageId":"36","fix":"37","desc":"38"},{"messageId":"39","fix":"40","desc":"41"},{"messageId":"36","fix":"42","desc":"38"},{"messageId":"39","fix":"43","desc":"41"},"suggestUnknown",{"range":"44","text":"45"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"44","text":"46"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"47","text":"45"},{"range":"47","text":"46"},[668,671],"unknown","never",[252,255]]