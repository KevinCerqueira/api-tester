[{"C:\\Users\\55759\\Documents\\GitHub\\api-tester\\web\\src\\index.tsx":"1","C:\\Users\\55759\\Documents\\GitHub\\api-tester\\web\\src\\Home.tsx":"2","C:\\Users\\55759\\Documents\\github\\api-tester\\web\\src\\index.tsx":"3","C:\\Users\\55759\\Documents\\github\\api-tester\\web\\src\\Home.tsx":"4","C:\\Users\\55759\\documents\\github\\api-tester\\web\\src\\index.tsx":"5","C:\\Users\\55759\\documents\\github\\api-tester\\web\\src\\Home.tsx":"6","C:\\Users\\55759\\documents\\github\\api-tester\\web\\src\\components\\MyModal.tsx":"7"},{"size":223,"mtime":1609551241745,"results":"8","hashOfConfig":"9"},{"size":3289,"mtime":1609869509283,"results":"10","hashOfConfig":"9"},{"size":223,"mtime":1609551241745,"results":"11","hashOfConfig":"12"},{"size":3125,"mtime":1609792584594,"results":"13","hashOfConfig":"12"},{"size":234,"mtime":1610845424386,"results":"14","hashOfConfig":"15"},{"size":3277,"mtime":1610845313619,"results":"16","hashOfConfig":"15"},{"size":1493,"mtime":1610845321228,"results":"17","hashOfConfig":"15"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"141beev",{"filePath":"21","messages":"22","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ndcj8",{"filePath":"25","messages":"26","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"s31zkx",{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"C:\\Users\\55759\\Documents\\GitHub\\api-tester\\web\\src\\index.tsx",[],["36","37","38","39","40"],"C:\\Users\\55759\\Documents\\GitHub\\api-tester\\web\\src\\Home.tsx",["41","42","43","44","45","46","47","48","49","50"],"C:\\Users\\55759\\Documents\\github\\api-tester\\web\\src\\index.tsx",[],"C:\\Users\\55759\\Documents\\github\\api-tester\\web\\src\\Home.tsx",["51","52","53","54","55","56","57","58","59"],"C:\\Users\\55759\\documents\\github\\api-tester\\web\\src\\index.tsx",[],["60","61","62","63","64"],"C:\\Users\\55759\\documents\\github\\api-tester\\web\\src\\Home.tsx",["65","66"],"import React, { useState, FormEvent, ChangeEvent } from 'react';\r\nimport {\r\n  FormControl,\r\n  Button,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport MyModal from './components/MyModal';\r\nimport './Home.css';\r\n\r\ninterface inputSubmit {\r\n  url: string;\r\n  type: string;\r\n}\r\n// interface dataSubmit {\r\n//   name: string;\r\n//   value: string | number;\r\n// }\r\n\r\nfunction App(): JSX.Element {\r\n  // const [response, setResponse] = useState();\r\n  const [state, setState] = useState<inputSubmit>({\r\n    url: '',\r\n    type: 'GET',\r\n  });\r\n  const handleChange: any = (\r\n    event: ChangeEvent<{ name?: string; value: unknown }>,\r\n  ) => {\r\n    const name = event.target.name as keyof typeof state;\r\n    setState({\r\n      ...state,\r\n      [name]: event.target.value,\r\n    });\r\n  };\r\n  async function handleSumbit(event: FormEvent): Promise<void> {\r\n    event.preventDefault();\r\n\r\n    console.log(state);\r\n  }\r\n  return (\r\n    <div className=\"app\">\r\n      <MyModal\r\n        title=\"ATENÇÃO\"\r\n        body=\"Este site ainda está em desenvolvimento, ok?!\"\r\n      />\r\n      <div id=\"title\" className=\"text-center\">\r\n        <p id=\"title-top\" className=\"h1\">\r\n          API TESTER\r\n        </p>\r\n        <p id=\"title-bottom\">\r\n          made by{' '}\r\n          <a\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n            href=\"https://github.com/KevinCerqueira\"\r\n          >\r\n            Kevin\r\n          </a>\r\n        </p>\r\n      </div>\r\n      <div id=\"section-input\">\r\n        <form onSubmit={handleSumbit} noValidate autoComplete=\"off\">\r\n          <div className=\"flex-container\">\r\n            <div className=\"flex-item flex-grow-0\">\r\n              <FormControl\r\n                id=\"form-control\"\r\n                variant=\"outlined\"\r\n                className=\"w-100\"\r\n              >\r\n                <InputLabel htmlFor=\"select-type\">Type</InputLabel>\r\n                <Select\r\n                  id=\"select-type\"\r\n                  value={state.type}\r\n                  onChange={handleChange}\r\n                  label=\"Type\"\r\n                  inputProps={{\r\n                    name: 'type',\r\n                    id: 'select-type',\r\n                  }}\r\n                >\r\n                  <MenuItem value=\"GET\">GET</MenuItem>\r\n                  <MenuItem value=\"POST\">POST</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </div>\r\n            <div className=\"flex-item flex-grow-2\">\r\n              <TextField\r\n                id=\"input-url\"\r\n                className=\"w-100\"\r\n                label=\"API\"\r\n                variant=\"outlined\"\r\n                inputProps={{\r\n                  name: 'url',\r\n                  id: 'input-url',\r\n                }}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"flex-item flex-grow-0\">\r\n              <Button\r\n                id=\"btn-send\"\r\n                className=\"w-100 h-100\"\r\n                variant=\"contained\"\r\n                color=\"default\"\r\n              >\r\n                <SendIcon />\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\55759\\documents\\github\\api-tester\\web\\src\\components\\MyModal.tsx",["67","68"],"import React, { useState } from 'react';\r\nimport { Modal, Button } from '@material-ui/core';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\n\r\nexport default function MyModal(props: any): JSX.Element {\r\n  const [open, setOpen] = useState(true);\r\n  const { title, body } = props;\r\n  const handleClose = (): void => {\r\n    setOpen(false);\r\n  };\r\n  const modalStyle = {\r\n    top: `${50}%`,\r\n    left: `${50}%`,\r\n    backgroundColor: '#212121',\r\n    color: '#FFF',\r\n    transform: `translate(-${50}%, -${50}%)`,\r\n  };\r\n  const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n      paper: {\r\n        position: 'absolute',\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n      },\r\n    }),\r\n  );\r\n  const classes = useStyles();\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n    >\r\n      <div style={modalStyle} className={classes.paper}>\r\n        <h2 className=\"text-center\" id=\"simple-modal-title\">\r\n          {title}\r\n        </h2>\r\n        <p className=\"text-center\" id=\"simple-modal-description\">\r\n          {body}\r\n        </p>\r\n        <Button onClick={handleClose} variant=\"contained\" className=\"btn-block\">\r\n          OK!\r\n        </Button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n",{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":1,"column":17,"nodeType":"81","messageId":"82","endLine":1,"endColumn":26},{"ruleId":"79","severity":1,"message":"83","line":3,"column":3,"nodeType":"81","messageId":"82","endLine":3,"endColumn":8},{"ruleId":"79","severity":1,"message":"84","line":5,"column":3,"nodeType":"81","messageId":"82","endLine":5,"endColumn":12},{"ruleId":"79","severity":1,"message":"85","line":7,"column":3,"nodeType":"81","messageId":"82","endLine":7,"endColumn":7},{"ruleId":"79","severity":1,"message":"86","line":20,"column":11,"nodeType":"81","messageId":"82","endLine":20,"endColumn":21},{"ruleId":"79","severity":1,"message":"87","line":35,"column":9,"nodeType":"81","messageId":"82","endLine":35,"endColumn":16},{"ruleId":"79","severity":1,"message":"88","line":36,"column":10,"nodeType":"81","messageId":"82","endLine":36,"endColumn":18},{"ruleId":"79","severity":1,"message":"89","line":36,"column":20,"nodeType":"81","messageId":"82","endLine":36,"endColumn":31},{"ruleId":"90","severity":1,"message":"91","line":41,"column":23,"nodeType":"92","messageId":"93","endLine":41,"endColumn":26,"suggestions":"94"},{"ruleId":"95","severity":1,"message":"96","line":53,"column":5,"nodeType":"97","messageId":"98","endLine":53,"endColumn":16},{"ruleId":"79","severity":1,"message":"80","line":1,"column":17,"nodeType":"81","messageId":"82","endLine":1,"endColumn":26},{"ruleId":"79","severity":1,"message":"83","line":3,"column":3,"nodeType":"81","messageId":"82","endLine":3,"endColumn":8},{"ruleId":"79","severity":1,"message":"84","line":5,"column":3,"nodeType":"81","messageId":"82","endLine":5,"endColumn":12},{"ruleId":"79","severity":1,"message":"86","line":20,"column":11,"nodeType":"81","messageId":"82","endLine":20,"endColumn":21},{"ruleId":"79","severity":1,"message":"87","line":35,"column":9,"nodeType":"81","messageId":"82","endLine":35,"endColumn":16},{"ruleId":"79","severity":1,"message":"88","line":36,"column":10,"nodeType":"81","messageId":"82","endLine":36,"endColumn":18},{"ruleId":"79","severity":1,"message":"89","line":36,"column":20,"nodeType":"81","messageId":"82","endLine":36,"endColumn":31},{"ruleId":"90","severity":1,"message":"91","line":41,"column":23,"nodeType":"92","messageId":"93","endLine":41,"endColumn":26,"suggestions":"99"},{"ruleId":"95","severity":1,"message":"96","line":53,"column":5,"nodeType":"97","messageId":"98","endLine":53,"endColumn":16},{"ruleId":"69","replacedBy":"100"},{"ruleId":"71","replacedBy":"101"},{"ruleId":"73","replacedBy":"102"},{"ruleId":"75","replacedBy":"103"},{"ruleId":"77","replacedBy":"104"},{"ruleId":"90","severity":1,"message":"91","line":29,"column":23,"nodeType":"92","messageId":"93","endLine":29,"endColumn":26,"suggestions":"105"},{"ruleId":"95","severity":1,"message":"96","line":41,"column":5,"nodeType":"97","messageId":"98","endLine":41,"endColumn":16},{"ruleId":"106","severity":1,"message":"107","line":5,"column":33,"nodeType":"81","messageId":"108","endLine":5,"endColumn":43},{"ruleId":"90","severity":1,"message":"91","line":5,"column":40,"nodeType":"92","messageId":"93","endLine":5,"endColumn":43,"suggestions":"109"},"lines-around-directive",["110"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Input' is defined but never used.","'FormGroup' is defined but never used.","'Grid' is defined but never used.","'dataSubmit' is defined but never used.","'classes' is assigned a value but never used.","'response' is assigned a value but never used.","'setResponse' is assigned a value but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["111","112"],"no-console","Unexpected console statement.","MemberExpression","unexpected",["113","114"],["110"],[],[],[],[],["115","116"],"@typescript-eslint/explicit-module-boundary-types","Argument 'props' should be typed with a non-any type.","anyTypedArg",["117","118"],"padding-line-between-statements",{"messageId":"119","fix":"120","desc":"121"},{"messageId":"122","fix":"123","desc":"124"},{"messageId":"119","fix":"125","desc":"121"},{"messageId":"122","fix":"126","desc":"124"},{"messageId":"119","fix":"127","desc":"121"},{"messageId":"122","fix":"128","desc":"124"},{"messageId":"119","fix":"129","desc":"121"},{"messageId":"122","fix":"130","desc":"124"},"suggestUnknown",{"range":"131","text":"132"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"131","text":"133"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"134","text":"132"},{"range":"134","text":"133"},{"range":"135","text":"132"},{"range":"135","text":"133"},{"range":"136","text":"132"},{"range":"136","text":"133"},[867,870],"unknown","never",[867,870],[644,647],[212,215]]