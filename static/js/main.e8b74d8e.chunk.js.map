{"version":3,"sources":["components/MyModal.tsx","Home.tsx","index.tsx"],"names":["MyModal","props","useState","open","setOpen","title","body","handleClose","modalStyle","top","left","backgroundColor","color","transform","classes","makeStyles","theme","createStyles","paper","position","width","palette","background","border","boxShadow","shadows","padding","spacing","useStyles","Modal","onClose","aria-labelledby","aria-describedby","style","className","id","Button","onClick","variant","App","data","status","statusText","dataResponse","setDataResponse","statusTransaction","setStatusTransaction","url","type","state","setState","borderColor","statusStyle","setStatusStyle","handleChange","event","name","target","value","handleSumbit","a","preventDefault","alert","axios","get","then","response","errorRequest","String","substring","typeError","length","codeError","Number","useEffect","rel","href","onSubmit","noValidate","autoComplete","FormControl","InputLabel","htmlFor","Select","native","onChange","label","inputProps","disabled","TextField","CircularProgress","Chip","multiline","rows","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e8b74d8e.chunk.js","sourcesContent":["/* eslint-disable prettier/prettier */\nimport React, { useState } from 'react';\nimport { Modal, Button } from '@material-ui/core';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\n\nexport default function MyModal(props: any): JSX.Element {\n  const [open, setOpen] = useState(true);\n  const { title, body } = props;\n  const handleClose = (): void => {\n    setOpen(false);\n  };\n  const modalStyle = {\n    top: `${50}%`,\n    left: `${50}%`,\n    backgroundColor: '#212121',\n    color: '#FFF',\n    transform: `translate(-${50}%, -${50}%)`,\n  };\n  const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n      paper: {\n        position: 'absolute',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n      },\n    }),\n  );\n  const classes = useStyles();\n  return (\n    <Modal\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n    >\n      <div style={modalStyle} className={classes.paper}>\n        <h2 className=\"text-center\" id=\"simple-modal-title\">\n          {title}\n        </h2>\n        <p className=\"text-center\" id=\"simple-modal-description\">\n          {body}\n        </p>\n        <Button onClick={handleClose} variant=\"contained\" className=\"btn-block\">\n          OK!\n        </Button>\n      </div>\n    </Modal>\n  );\n}","/* eslint-disable prettier/prettier */\nimport React, { useEffect, useState, FormEvent, ChangeEvent } from 'react';\nimport {\n  FormControl,\n  Button,\n  InputLabel,\n  Select,\n  TextField,\n  CircularProgress,\n  Chip,\n} from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport axios from 'axios';\nimport MyModal from './components/MyModal';\nimport './Home.css';\n\ninterface InputSubmit {\n  url: string;\n  type: string;\n}\n\ninterface Response {\n  data: Array<string>;\n  status: number;\n  statusText: string;\n}\n// interface dataSubmit {\n//   name: string;\n//   value: string | number;\n// }\n\nfunction App(): JSX.Element {\n  const [dataResponse, setDataResponse] = useState<Response>({\n    data: [],\n    status: 0,\n    statusText: '',\n  });\n  const [statusTransaction, setStatusTransaction] = useState(false);\n  const [state, setState] = useState<InputSubmit>({\n    url: '',\n    type: '',\n  });\n  const [statusStyle, setStatusStyle] = useState({\n    color: '#FFF',\n    borderColor: '#FFF',\n  });\n  const handleChange: any = (\n    event: ChangeEvent<{ name?: string; value: unknown }>,\n  ) => {\n    const name = event.target.name as keyof typeof state;\n    setState({\n      ...state,\n      [name]: event.target.value,\n    });\n  };\n  useEffect(() => {\n    if (String(dataResponse.statusText) === '') {\n      setStatusStyle({\n        color: '#FFF',\n        borderColor: '#FFF',\n      });\n    } else if (String(dataResponse.statusText) !== 'OK') {\n      setStatusStyle({\n        color: '#E83B42',\n        borderColor: '#E83B42',\n      });\n    } else {\n      setStatusStyle({\n        color: '#33ff00',\n        borderColor: '#33ff00',\n      });\n    }\n  }, [dataResponse.statusText, statusStyle]);\n  async function handleSumbit(event: FormEvent): Promise<void> {\n    event.preventDefault();\n    setStatusTransaction(true);\n    const { url, type } = state;\n    if (type === '') {\n      alert('Selecione um tipo de envio!');\n    }\n    if (url === '') {\n      alert('Insira uma API!');\n    }\n    if (type === 'GET') {\n      try {\n        await axios.get(url).then((response: any) => {\n          setDataResponse(response);\n        });\n      } catch (error) {\n        const errorRequest = String(error).substring(7);\n        if (errorRequest !== 'Network Error') {\n          const typeError = errorRequest.substring(0, errorRequest.length - 21);\n          const codeError = errorRequest.substring(errorRequest.length - 3);\n          setDataResponse({\n            data: [],\n            status: Number(codeError),\n            statusText: typeError,\n          });\n        } else {\n          setDataResponse({\n            data: [],\n            status: 400,\n            statusText: errorRequest,\n          });\n        }\n      }\n    }\n    setStatusTransaction(false);\n  }\n  return (\n    <div className=\"app\">\n      <MyModal\n        title=\"ATENÇÃO\"\n        body=\"Este site ainda está em desenvolvimento, ok?!\"\n      />\n      <div id=\"title\" className=\"text-center\">\n        <p id=\"title-top\" className=\"h1\">\n          API TESTER\n        </p>\n        <p id=\"title-bottom\">\n          made by{' '}\n          <a\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n            href=\"https://github.com/KevinCerqueira\"\n          >\n            Kevin\n          </a>\n        </p>\n      </div>\n      <div className=\"sections flex-container\">\n        <div id=\"section-input\" className=\"flex-item\">\n          <form onSubmit={handleSumbit} noValidate autoComplete=\"off\">\n            <div className=\"flex-container\">\n              <div className=\"flex-item flex-grow-0\">\n                <FormControl id=\"form-control\" variant=\"outlined\">\n                  <InputLabel htmlFor=\"select-type\">Type</InputLabel>\n                  <Select\n                    native\n                    id=\"select-type\"\n                    value={state.type}\n                    onChange={handleChange}\n                    label=\"Type\"\n                    inputProps={{\n                      name: 'type',\n                      id: 'select-type',\n                    }}\n                    disabled={statusTransaction}\n                  >\n                    <option value=\"\"> </option>\n                    <option value=\"GET\">GET</option>\n                    <option disabled value=\"POST\" className=\"text-secondary\">\n                      POST\n                    </option>\n                  </Select>\n                </FormControl>\n              </div>\n              <div className=\"flex-item flex-grow-2\">\n                <TextField\n                  id=\"input-url\"\n                  className=\"w-100\"\n                  label=\"API\"\n                  variant=\"outlined\"\n                  inputProps={{\n                    name: 'url',\n                    id: 'input-url',\n                  }}\n                  disabled={statusTransaction}\n                  onChange={handleChange}\n                />\n              </div>\n              <div className=\"flex-item flex-grow-0\">\n                <Button\n                  id=\"btn-send\"\n                  className=\"w-100 h-100\"\n                  variant=\"contained\"\n                  color=\"default\"\n                  type=\"submit\"\n                  onClick={handleSumbit}\n                  disabled={statusTransaction}\n                >\n                  {statusTransaction ? (\n                    <CircularProgress className=\"circular-progress\" />\n                  ) : (\n                    <SendIcon />\n                  )}\n                </Button>\n              </div>\n            </div>\n          </form>\n        </div>\n        <div id=\"section-response\" className=\"flex-item\">\n          <div id=\"section-response-container\" className=\"flex-container\">\n            <div id=\"section-status\" className=\"flex-item\">\n              <div id=\"container-chips\" className=\"flex-container\">\n                <div className=\"flex-item text-center\">\n                  <Chip\n                    style={statusStyle}\n                    className=\"chip-status\"\n                    label={`Status: ${\n                      dataResponse.statusText === ''\n                        ? 'NO DATA'\n                        : dataResponse.status\n                    }`}\n                    variant=\"outlined\"\n                  />\n                </div>\n                <div className=\"flex-item text-center\">\n                  <Chip\n                    style={statusStyle}\n                    className=\"chip-status\"\n                    label={`Status Text: ${\n                      dataResponse.statusText === ''\n                        ? 'NO DATA'\n                        : dataResponse.statusText\n                    }`}\n                    variant=\"outlined\"\n                  />\n                </div>\n              </div>\n            </div>\n            <div id=\"section-return\" className=\"flex-item\">\n              <TextField\n                className=\"btn-block\"\n                id=\"outlined-multiline-static\"\n                label=\"Return\"\n                multiline\n                rows={4}\n                value={dataResponse.data}\n                variant=\"outlined\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/* eslint-disable prettier/prettier */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Home from './Home';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Home />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}